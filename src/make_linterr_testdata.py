import json
import re
from StringIO import StringIO

CONF = 'linterr_code.json'
DATA = '../test/errorcode.py'

HEADER = """# This file is generated by make_linterr_testdata.py. Do not edit!

class ErrorCode(object):

    def __init__(self, cat, num, loglv, message):
        self.category = cat
        self.num = num
        self.loglv = loglv
        self.message = message

    def tag(self):
        tag = None
        if self.loglv == 'Warn':
            tag = 'W'
        elif self.loglv == 'Error':
            tag = 'E'
        return '%s%d' % (tag, self.num)

    def format(self, params=[]):
        d = {}
        for i in range(0, len(params)):
            d['$%d' % (i+1)] = params[i]
        return self.tag() + ' ' + self.message % d


"""


class Code(object):

    def __init__(self, data):
        self.category = data['category']
        self.num = data['num']
        self.loglv = data.get('loglv', 'Error')
        self.type_ = data['type']
        self.param_types = data.get('param_types')
        self.message = data['message']
        self.doc = data.get('doc')
        self.param_doc = data.get('param_doc')

        msg = re.sub(r"(\$\d+)", r"%(\1)s", self.message)
        msg = re.sub('"', '\"', msg)
        self.py_format = '"' + msg + '"'

    def tag(self):
        tag = None
        if self.loglv == 'Warn':
            tag = 'W'
        elif self.loglv == 'Error':
            tag = 'E'
        return '%s%d' % (tag, self.num)


def run():
    s = open(CONF).read()
    conf = json.loads(s)
    codes = [Code(data) for data in conf]

    f = StringIO()
    f.write(HEADER)
    write_code(f, codes)
    open(DATA, 'w').write(f.getvalue().encode('utf8'))


def write_code(f, codes):
    for code in codes:
        f.write(u"%s = %s = ErrorCode('%s', %d, '%s', %s)\n" %
                (code.tag(), code.type_, code.category, code.num,
                    code.loglv, code.py_format))
    f.write("\n")


if __name__ == "__main__":
    run()
